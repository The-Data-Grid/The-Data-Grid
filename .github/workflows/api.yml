name: API Testing with PostgreSQL Service
on:
  push:
    branches:
      - express
  pull_request:
    branches:
      - express

jobs:
  # Label of the runner job
  API-Test-Suite:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgis/postgis:12-3.1
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      - name: Initialize the PostgreSQL Database and build the schema
        # Runs a script that creates the v5 PostgreSQL database and builds the schema
        run: npm run db-init

      - name: Add Fake Data to the PostgreSQL Database
        run: npm run db-fake

      - name: Run the Test Suite
        run: npm run test -- api --forceExit --detectOpenHandles
        env:
          PGPASSWORD: postgres
